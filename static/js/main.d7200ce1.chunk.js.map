{"version":3,"sources":["store/reducers/moveiInfo.js","store/actions/actionTypes.js","store/reducers/index.js","api/axios.js","components/UI/Loading.js","components/MovieInfo/Results.js","components/MovieInfo/SearchPage.js","store/actions/index.js","components/UI/Header.js","components/MovieInfo/SingleResult.js","components/App.js","index.js"],"names":["initialState","searchResults","loading","movieDetails","reducer","state","action","type","payload","combineReducers","movieinfo","axios","create","baseURL","Loading","className","Results","responseText","renderList","props","Response","Search","map","el","key","imdbID","style","width","height","src","Poster","alt","Title","title","Year","to","nextProps","this","setState","Fragment","React","Component","connect","SearchPage","search","onInputChange","e","target","value","onFormSubmit","preventDefault","fetchResults","onSubmit","onChange","placeholder","aria-label","disabled","aria-hidden","searchValue","dispatch","a","async","get","response","data","console","log","Header","data-toggle","data-target","aria-controls","aria-expanded","id","href","SingleResult","fetchSingleResult","match","params","imdbRating","Runtime","Plot","Released","Genre","Director","Writer","Actors","Language","Country","Awards","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reducers","App","path","component","exact","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d7200ce1.chunk.js","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\nconst initialState = {\r\n  searchResults: [],\r\n  loading: false,\r\n  movieDetails: {},\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_RESULTS:\r\n      return { ...state, searchResults: action.payload, loading: false };\r\n    case actionTypes.FETCH_SINGLE_RESULT:\r\n      return { ...state, movieDetails: action.payload, loading: false };\r\n    case actionTypes.LOADING_RESULT:\r\n      return { ...state, loading: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const FETCH_RESULTS = 'FETCH_RESULTS';\r\nexport const FETCH_SINGLE_RESULT = 'FETCH_SINGLE_RESULT';\r\nexport const LOADING_RESULT = 'LOADING_RESULT';\r\n","import { combineReducers } from 'redux';\r\nimport movieinfo from './moveiInfo';\r\n\r\nexport default combineReducers({\r\n  movieinfo,\r\n});\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://www.omdbapi.com/\"\r\n});\r\n","import React from 'react';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loader center mt-5\">\r\n      <i className=\"fa fa-cog fa-spin\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../UI/Loading';\r\n\r\nclass Results extends React.Component {\r\n  state = {\r\n    responseText: '',\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    if (this.props.searchResults) {\r\n      if (\r\n        nextProps.searchResults.Response !== this.props.searchResults.Response\r\n      ) {\r\n        this.setState({ responseText: 'No Result Found' });\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  renderList = () => {\r\n    return (\r\n      <div className=\"container mt-3 row p-4\">\r\n        {this.props.searchResults &&\r\n        this.props.searchResults.Response === 'True'\r\n          ? this.props.searchResults.Search.map((el) => {\r\n              return (\r\n                <div className=\"col-sm text-dark m-4 \" key={el.imdbID}>\r\n                  <div\r\n                    className=\"card\"\r\n                    style={{ width: '250px', height: '450px' }}\r\n                  >\r\n                    <div className=\"card-body p-3\">\r\n                      <img\r\n                        src={el.Poster}\r\n                        alt=\"unavailable\"\r\n                        style={{ width: '200px' }}\r\n                      />\r\n                      <p className=\"font-weight-bold\">{el.Title}</p>\r\n                      <footer className=\"blockquote-footer\">\r\n                        <cite title=\"Source Title\">Year {el.Year}</cite>\r\n                      </footer>\r\n                      <Link\r\n                        className=\"btn btn-primary\"\r\n                        to={`/singleResult/${el.imdbID}`}\r\n                      >\r\n                        More Info\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          : this.state.responseText}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.loading ? <Loading /> : this.renderList()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchResults: state.movieinfo.searchResults,\r\n    loading: state.movieinfo.loading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Results);\r\n","import React, { Component } from 'react';\r\nimport { fetchResults } from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Results from './Results';\r\n\r\nclass SearchPage extends Component {\r\n  state = {\r\n    search: '',\r\n  };\r\n  onInputChange = (e) => {\r\n    this.setState({ search: e.target.value });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.fetchResults(this.state.search);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container text-center mt-5\">\r\n        <div className=\"card  p-3 bg-danger text-white\">\r\n          <div className=\"card-title display-4\">\r\n            Search Movies,Tv Shows And Many More\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form\r\n              className=\"form-inline active-pink-3 active-pink-4\"\r\n              onSubmit={this.onFormSubmit}\r\n            >\r\n              <input\r\n                className=\"form-control form-control-sm w-100\"\r\n                type=\"text\"\r\n                onChange={this.onInputChange}\r\n                value={this.state.search}\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button\r\n                className=\"btn btn-block btn-primary btn-outline-secondary mt-3 text-dark\"\r\n                disabled={this.state.search < 1}\r\n              >\r\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Results />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { fetchResults })(SearchPage);\r\n","import {\r\n  FETCH_RESULTS,\r\n  FETCH_SINGLE_RESULT,\r\n  LOADING_RESULT,\r\n} from './actionTypes';\r\nimport axios from '../../api/axios';\r\n\r\nexport const fetchResults = (searchValue) => async (dispatch) => {\r\n  dispatch({ type: LOADING_RESULT });\r\n  try {\r\n    const response = await axios.get(`?apiKey=b36f9996&s=${searchValue}`);\r\n\r\n    dispatch({ type: FETCH_RESULTS, payload: response.data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchSingleResult = (id) => async (dispatch) => {\r\n  dispatch({ type: LOADING_RESULT });\r\n  try {\r\n    const response = await axios.get(`?apiKey=b36f9996&i=${id}`);\r\n\r\n    dispatch({ type: FETCH_SINGLE_RESULT, payload: response.data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/movieinfo\">\r\n              MovieInfo\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"nav navbar-nav \">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"https://www.imdb.com\">\r\n              IMDB\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSingleResult } from '../../store/actions/index';\r\n\r\nclass SingleResult extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchSingleResult(this.props.match.params.id);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container text-dark  text-center mt-3  p-4\">\r\n        {this.props.movieDetails ? (\r\n          <div className=\"col text\">\r\n            <div className=\"card p-4\">\r\n              <p>IMDB Rating: {this.props.movieDetails.imdbRating}/10</p>\r\n              <img\r\n                className=\"card-img mx-auto\"\r\n                src={this.props.movieDetails.Poster}\r\n                alt=\"unavailable\"\r\n                style={{ width: '200px' }}\r\n              />\r\n\r\n              <p className=\"card-text\">{this.props.movieDetails.Runtime}</p>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{this.props.movieDetails.Title}</h5>\r\n                <p className=\"card-text\">\r\n                  Plot- {this.props.movieDetails.Plot}\r\n                </p>\r\n              </div>\r\n              <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item\">\r\n                  Released- {this.props.movieDetails.Released}\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  Genre- {this.props.movieDetails.Genre}\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  Director- {this.props.movieDetails.Director}\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  Writer- {this.props.movieDetails.Writer}\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  Actors- {this.props.movieDetails.Actors}\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  Language- {this.props.movieDetails.Language}\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  Country- {this.props.movieDetails.Country}\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  Awards- {this.props.movieDetails.Awards}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          'No Movie Yert'\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return { movieDetails: state.movieinfo.movieDetails };\r\n};\r\nexport default connect(mapStateToProps, { fetchSingleResult })(SingleResult);\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reducers from '../store/reducers/index';\r\nimport SearchPage from './MovieInfo/SearchPage';\r\nimport Header from './UI/Header';\r\nimport SingleResult from './MovieInfo/SingleResult';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\r\n\r\nconst store = createStore(reducers, enhancer);\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/singleResult/:id\" component={SingleResult} />\r\n          <Route path=\"/movieinfo\" exact component={SearchPage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}